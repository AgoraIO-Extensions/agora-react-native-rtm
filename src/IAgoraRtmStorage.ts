import { RTM_CHANNEL_TYPE } from './AgoraRtmBase';

/// Generated by terra, DO NOT MODIFY BY HAND.

/**
 * Metadata options.
 */
export class MetadataOptions {
  recordTs?: boolean = false;
  recordUserId?: boolean = false;
  constructor(
    props?: Partial<{
      recordTs?: boolean;
      recordUserId?: boolean;
    }>
  ) {
    Object.assign(this, props);
  }
}

export class MetadataItem {
  key?: string;
  value?: string;
  authorUserId?: string;
  revision?: number = -1;
  updateTs?: number = 0;
  constructor(
    props?: Partial<{
      key?: string;
      value?: string;
      authorUserId?: string;
      revision?: number;
      updateTs?: number;
    }>
  ) {
    Object.assign(this, props);
  }
}

export abstract class IRtmStorage {
  abstract createMetadata(): RtmMetadata;
  abstract setChannelMetadata(
    channelName: string,
    channelType: RTM_CHANNEL_TYPE,
    data: RtmMetadata,
    options: MetadataOptions,
    lockName: string,
    requestId?: number
  ): number;
  abstract updateChannelMetadata(
    channelName: string,
    channelType: RTM_CHANNEL_TYPE,
    data: RtmMetadata,
    options: MetadataOptions,
    lockName: string,
    requestId?: number
  ): number;
  abstract removeChannelMetadata(
    channelName: string,
    channelType: RTM_CHANNEL_TYPE,
    data: RtmMetadata,
    options: MetadataOptions,
    lockName: string,
    requestId?: number
  ): number;
  abstract getChannelMetadata(
    channelName: string,
    channelType: RTM_CHANNEL_TYPE,
    requestId?: number
  ): number;
  abstract setUserMetadata(
    userId: string,
    data: RtmMetadata,
    options: MetadataOptions,
    requestId?: number
  ): number;
  abstract updateUserMetadata(
    userId: string,
    data: RtmMetadata,
    options: MetadataOptions,
    requestId?: number
  ): number;
  abstract removeUserMetadata(
    userId: string,
    data: RtmMetadata,
    options: MetadataOptions,
    requestId?: number
  ): number;
  abstract getUserMetadata(userId: string, requestId?: number): number;
  abstract subscribeUserMetadata(userId: string, requestId?: number): number;
  abstract unsubscribeUserMetadata(userId: string): number;
}

export class RtmMetadata {
  majorRevision?: number = -1;
  metadataItems?: MetadataItem[];
  metadataItemsSize?: number;
  constructor(
    props?: Partial<{
      majorRevision?: number;
      metadataItems?: MetadataItem[];
      metadataItemsSize?: number;
    }>
  ) {
    Object.assign(this, props);
  }
}
